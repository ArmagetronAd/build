#!/bin/bash
# builds portable client

# set -x

#   add AppRun and desktop file
cp portable/AppRun ${APPDIR}/
find ${APPDIR} -name "*.desktop" -exec mv \{\} ${APPDIR}/ \;

#   hack Icon
find ${APPDIR} -type d -name "desktop" -exec cp \{\}/icons/small/armagetronad.png ${APPDIR}/${PACKAGE}.png \;

lastpath=

function copylib()
{
    baselib=$1
    path=$(dirname ${baselib})
    baselib=$(basename ${baselib})
    echo "Found in ${path}."
    if test -n "$lastpath" && test "$(dirname $lastpath)" != "$(dirname $path)"; then
        echo "error: different paths detected, frankenbuild!"
        exit 1
    fi
    lastpath=$path
    while test -n "${baselib}"; do
      # copy libary
      echo Copying ${baselib}...
      cp -ax "${path}/${baselib}" ${APPDIR}/usr/lib/
      # resolve links
      baselib=$(ls -l ${path}/${baselib} | grep -- "->" | sed -e "s,.*-> ,,")
    done
}

#   include libraries
mkdir -p ${APPDIR}/usr/lib/
mkdir -p ${APPDIR}/usr/local/lib/
for library in \
libxml2 \
libZThread \
libSDL-1 \
libSDL_image libpng \
libSDL_mixer \
libGLEW \
libfreetype \
libftgl \
libprotobuf \
libboost_thread \
; do
  echo "Checking for library ${library}...."
  baselib=$(ldd ${APPDIR}/usr/local/bin/${PACKAGE} | grep "${library}" | sed -e "s,.*=> ,," -e "s, (.*,,")
  if test -z "${baselib}"; then
    echo "Not linked."
  else
    copylib ${baselib}
  fi
done

# libraries we know are dynamically loaded later, so they don't appear in ldd's output
for library in \
libjpeg.so.62 \
; do
    echo "Installing library ${library} anyway, we know it's needed."
    copylib ${lastpath}/${library}
done


echo $lastpath

